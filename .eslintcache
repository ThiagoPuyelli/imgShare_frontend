[{"/home/thiagopuyelli/Escritorio/Programacion/imgShare/frontend/src/index.js":"1","/home/thiagopuyelli/Escritorio/Programacion/imgShare/frontend/src/reportWebVitals.js":"2","/home/thiagopuyelli/Escritorio/Programacion/imgShare/frontend/src/App.js":"3","/home/thiagopuyelli/Escritorio/Programacion/imgShare/frontend/src/components/Login.js":"4","/home/thiagopuyelli/Escritorio/Programacion/imgShare/frontend/src/components/Header.js":"5","/home/thiagopuyelli/Escritorio/Programacion/imgShare/frontend/src/components/Register.js":"6","/home/thiagopuyelli/Escritorio/Programacion/imgShare/frontend/src/components/CreatePost.js":"7","/home/thiagopuyelli/Escritorio/Programacion/imgShare/frontend/src/components/methods/verifyAuth.js":"8","/home/thiagopuyelli/Escritorio/Programacion/imgShare/frontend/src/components/Home.js":"9","/home/thiagopuyelli/Escritorio/Programacion/imgShare/frontend/src/components/HomeAuth.js":"10","/home/thiagopuyelli/Escritorio/Programacion/imgShare/frontend/src/assets/serverLink.js":"11","/home/thiagopuyelli/Escritorio/Programacion/imgShare/frontend/src/components/Profile.js":"12","/home/thiagopuyelli/Escritorio/Programacion/imgShare/frontend/src/components/ListLikesPosts.js":"13","/home/thiagopuyelli/Escritorio/Programacion/imgShare/frontend/src/components/ListPosts.js":"14"},{"size":601,"mtime":1610850920300,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1610785444666,"results":"17","hashOfConfig":"16"},{"size":1297,"mtime":1612044766455,"results":"18","hashOfConfig":"16"},{"size":3064,"mtime":1612044766491,"results":"19","hashOfConfig":"16"},{"size":5686,"mtime":1612651857041,"results":"20","hashOfConfig":"16"},{"size":13565,"mtime":1612071030539,"results":"21","hashOfConfig":"16"},{"size":4670,"mtime":1612071647261,"results":"22","hashOfConfig":"16"},{"size":747,"mtime":1611527678966,"results":"23","hashOfConfig":"16"},{"size":578,"mtime":1611029941532,"results":"24","hashOfConfig":"16"},{"size":587,"mtime":1612638136742,"results":"25","hashOfConfig":"16"},{"size":44,"mtime":1611527678962,"results":"26","hashOfConfig":"16"},{"size":8487,"mtime":1612652354533,"results":"27","hashOfConfig":"16"},{"size":227,"mtime":1612289011105,"results":"28","hashOfConfig":"16"},{"size":6167,"mtime":1612640653772,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"zzss5o",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"32"},"/home/thiagopuyelli/Escritorio/Programacion/imgShare/frontend/src/index.js",[],["66","67"],"/home/thiagopuyelli/Escritorio/Programacion/imgShare/frontend/src/reportWebVitals.js",[],"/home/thiagopuyelli/Escritorio/Programacion/imgShare/frontend/src/App.js",["68"],"import './assets/css/App.css';\nimport {Header} from \"./components/Header\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\" \nimport { Login } from \"./components/Login\";\nimport { Register } from \"./components/Register\";\nimport { Home } from \"./components/Home\";\nimport { HomeAuth } from \"./components/HomeAuth\";\nimport { CreatePost } from \"./components/CreatePost\";\nimport {verifyAuth} from \"./components/methods/verifyAuth\";\n\nfunction App() {\n\n\n  function NoAuth(){\n    return (\n      <Switch>\n        <Route path=\"/register\">\n          <Register />\n        </Route>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    )\n  }\n\n  function Auth(){\n    return (\n      <Switch>\n        <Route path=\"/create\">\n          <CreatePost />\n        </Route>\n        <Route path=\"/\">\n          <HomeAuth />\n        </Route>\n      </Switch>\n    )\n  }\n\n  function Content(){\n    const auth = verifyAuth();\n    if(auth == true){\n      return <Auth />\n    } else {\n      return <NoAuth />\n    }\n  }\n  \n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <div id=\"contentApp\">\n        <Content />\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/home/thiagopuyelli/Escritorio/Programacion/imgShare/frontend/src/components/Login.js",["69","70"],"import {Component} from \"react\";\nimport { TextField, Button, InputAdornment } from \"@material-ui/core\";\nimport {global} from \"../assets/serverLink\";\nimport \"../assets/css/Login.css\";\nimport { Lock, Email } from \"@material-ui/icons\";\nimport {verifyAuth} from \"./methods/verifyAuth\";\nimport {Redirect} from \"react-router-dom\";\n\nexport class Login extends Component{\n\n    componentWillMount(){\n        const auth = verifyAuth();\n        if(auth){\n            Redirect(\"/\");\n        }\n    }\n\n    render(){\n\n        var user = {\n            email: \"\",\n            password: \"\"\n        }\n\n        function changeInput(event){\n            const value = event.target.value;\n            const data = event.target.getAttribute(\"name\");\n            user[data] = value;\n        }\n\n        function submit(){\n            window.event.preventDefault();\n            if(user.email != \"\" && user.password != \"\"){\n                console.log(user)\n                const formData = new FormData();\n                for(let i in user) formData.append(i, user[i]);\n                fetch(global + \"users/login\", {\n                    method: \"POST\",\n                    body: JSON.stringify(user),\n                    headers:{\n                        \"Content-Type\": \"application/json\"\n                    }\n                })\n                .then(response => response.json())\n                .then(result => {\n                    if(result.token){\n                        sessionStorage.setItem(\"x-access-token\", result.token);\n                        window.location.reload();\n                    } else {\n                        document.querySelector(\"#messageError\").style.display = \"block\"\n                    }\n                    console.log(result)\n                })\n                .catch(err => console.log(err));\n            } else {\n                document.querySelector(\"#messageError\").style.display = \"block\"\n            }\n        }\n\n        return (\n        <div id=\"formulario\">\n            <h1 id=\"titleLogin\">Login</h1>\n            <form id=\"formLogin\" onSubmit={submit}>\n                <TextField className=\"input\" onChange={changeInput} name=\"email\" type=\"email\" InputProps={{\n                        startAdornment: (\n                            <InputAdornment position=\"start\">\n                                <Email />\n                            </InputAdornment>\n                        )\n                    }}  placeholder=\"Email\" label=\"Email\" />\n                <TextField className=\"input\" onChange={changeInput} InputProps={{\n                        startAdornment: (\n                            <InputAdornment position=\"start\">\n                                <Lock />\n                            </InputAdornment>\n                        )\n                    }}  name=\"password\" type=\"password\" placeholder=\"Password\" label=\"Password\" />\n                <span id=\"messageError\">User not valid</span>\n                <Button type=\"submit\" id=\"buttonSubmit\" variant=\"contained\">Submit</Button>\n            </form>\n        </div>\n        )\n    }\n}","/home/thiagopuyelli/Escritorio/Programacion/imgShare/frontend/src/components/Header.js",["71","72","73"],"/home/thiagopuyelli/Escritorio/Programacion/imgShare/frontend/src/components/Register.js",["74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96"],"import React, {Component} from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Button, TextField, InputAdornment, Slider, Avatar } from \"@material-ui/core\";\nimport { AccountCircle, Description, Email, Lock } from \"@material-ui/icons\";\nimport \"../assets/css/Register.css\"; \nimport { global } from \"../assets/serverLink\";\nimport {verifyAuth} from \"./methods/verifyAuth\";\n\nexport class Register extends Component{\n\n    componentWillMount(){\n        const auth = verifyAuth();\n        if(auth){\n            Redirect(\"/\");\n        }\n    }\n\n    render(){\n\n        var imageFile = undefined,\n        srcToAvatar = undefined,\n        positionImageWidth = 24,\n        positionImageVertical = 0,\n        positionImageSize = 110,\n        positionMaxWidth = 50,\n        positionMaxVertical = 1,\n        positionMinVertical = -1,\n        user = {\n            username: \"\",\n            email: \"\",\n            password: \"\",\n            description: \"\",\n            image: undefined,\n            positionImage: \"\"\n        }\n\n        function Sliders(){\n            return (\n                <div id=\"slidersContent\">\n                    <label className=\"sliderLabel\">Horizontal</label>\n                    <Slider className=\"sliderHorizontal slider\" id=\"slider\" defaultValue={24} onChange={sliderChangeHorizontal} aria-labelledby=\"input-slider\" min={0} max={positionMaxWidth} />\n                    <div id=\"slidersVertical\">\n                        <div className=\"divSlider\">\n                        <label className=\"sliderLabel sliderLabelVertical\">Vertical</label>\n                        <Slider orientation=\"vertical\" onChange={sliderChangeVertical} className=\"sliderVertical slider\" id=\"slider\" defaultValue={0} aria-labelledby=\"input-slider\" min={positionMinVertical} max={positionMaxVertical} />\n                        </div>\n                        <div className=\"divSlider\">\n                        <label className=\"sliderLabel\">Size</label>\n                        <Slider orientation=\"vertical\" onChange={sliderChangeSize} className=\"sliderSize slider\" id=\"slider\" defaultValue={110} aria-labelledby=\"input-slider\" min={110} max={220} />\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n\n        function submitUser(){\n            console.log(user)\n            const errors = []\n            for(let i in user){\n                if(i != \"image\" && i != \"positionImage\" && i != \"description\"){\n                    if(user[i] == undefined || user[i] == \"\"){\n                        errors.push(\"message\" + i);\n                    }\n                } \n            }\n            if(errors.length < 1){\n                var userSend = {\n                    username: \"\",\n                    email: \"\",\n                    password: \"\"\n                }\n                if(user.image != undefined){\n                    const formData = new FormData();\n                    for(let i in user){\n                        if(i != \"image\"){\n                            if(user[i] != \"\") formData.append(i, user[i]);\n                        } else {\n                            formData.append(\"image\", user.image, user.image.name);\n                        }\n                    }\n                    userSend = formData;\n                } else {\n                    userSend = {\n                        ...userSend,\n                        description: \"\"\n                    }\n                    for(let i in user){\n                        if(i != \"image\" && i != \"positionImage\"){\n                            if(i == \"description\" && user.description != \"\"){\n                                userSend[i] = user[i];\n                            }\n                        }\n                    }\n                }\n\n                fetch(global + \"users/register\", {\n                    method: \"POST\",\n                    body: userSend,\n                    cors: \"no-cors\"\n                })\n                .then(response => response.json())\n                .then(resolve => {\n                    if(resolve.token){\n                        sessionStorage.setItem(\"x-access-token\", resolve.token);\n                        window.location.reload();\n                    }\n                })\n                .catch(err => console.log(err));\n\n            } else {\n                for(let i of errors) {\n                    try{\n                        const message = document.querySelector(\"#\" + i);\n                        message.style.display = \"block\";\n                    } catch(err){\n                        console.log(err)\n                    }\n                }\n            }\n        }\n        \n        function changeInput(event){\n            const value = event.target.value;\n            const data  = event.target.getAttribute(\"name\");\n            const input = document.querySelector(\".input\" + data);\n            if(data != \"description\" && data != \"password\" && value == \"\"){\n                document.querySelector(\".input\" + data + \" label\").style.color = \"red\";\n                input.style.borderBottom = \"3px solid red\"\n            } else if(data == \"password\" && value.length < 4){\n                document.querySelector(\".input\" + data + \" label\").style.color = \"red\";\n                input.style.borderBottom = \"3px solid red\"\n                document.querySelector(\"#messagePassword\").style.display = \"block\";\n            } else if(data != \"description\") {\n                user[data] = value;\n                document.querySelector(\".input\" + data + \" label\").style.color = \"green\";\n                input.style.borderBottom = \"3px solid green\"\n                if(data == \"password\") document.querySelector(\"#messagePassword\").style.display = \"none\"\n            } else if(data == \"description\"){\n                user[data] = value;\n            }\n        }\n\n        function changeFile(event){\n            imageFile = event.target.files[0];\n            if(imageFile.type.split(\"/\")[0] == \"image\"){\n                document.querySelector(\"#messageImage\").style.display = \"none\";\n                user.image = imageFile;\n                srcToAvatar = URL.createObjectURL(imageFile);\n                const avatarRegister = document.querySelector(\"#avatarRegister\");\n                avatarRegister.setAttribute(\"src\", srcToAvatar)\n                const sliders = document.querySelectorAll(\".slider\");\n                for(let i of sliders) i.style.display = \"block\";\n                document.querySelector(\"#avatarNone\").style.display = \"none\"\n                const labels = document.querySelectorAll(\".sliderLabel\");\n                for(let i of labels) i.style.display = \"block\";\n                document.querySelector(\"#submitRegister\").style.marginTop = \"20px\"\n                user.positionImage = \"24 0 110\";\n                const image = document.querySelector(\"#avatarRegister\"); \n                image.style.marginLeft = \"-\" + 24 + \"px\";\n                image.style.marginTop = 0 + \"px\"; \n                image.style.width = 110 + \"px\";\n                document.querySelector(\".sliderHorizontal span[role='slider']\").setAttribute(\"aria-valuemax\", 24);\n                document.querySelector(\".sliderVertical span[role='slider']\").setAttribute(\"aria-valuemax\", 1);\n                document.querySelector(\".sliderVertical span[role='slider']\").setAttribute(\"aria-valuemin\", -1);\n            } else {\n                document.querySelector(\"#messageImage\").style.display = \"block\";\n            }\n        }\n\n        function calculeValue(max, min, porcent){\n\n            if(parseInt(min) < 0){\n                const value = porcent * (parseInt(max) / 2) / 100;\n                return value + parseInt(min) / 2;\n            } else {\n                const value = porcent * parseInt(max) / 100;\n                return value;\n            }\n        }\n\n        async function sliderChangeHorizontal(){\n            const porcent = document.querySelector(\".sliderHorizontal .MuiSlider-track\").getAttribute(\"style\").split(\"h: \")[1];\n            const max = document.querySelector(\".sliderHorizontal span[role='slider']\").getAttribute(\"aria-valuemax\");\n            var value = await calculeValue(porcent, 0, max)\n            value = value * 2;\n            value = value - (positionImageSize - 110);\n            positionImageWidth = value;\n            user.positionImage = value + \" \" + user.positionImage.split(\" \")[1] + \" \" + user.positionImage.split(\" \")[2]; \n            document.querySelector(\"#avatarRegister\").style.marginLeft = \"-\" + value + \"px\";\n        }\n\n        async function sliderChangeVertical(){\n            const porcent = document.querySelector(\".sliderVertical .MuiSlider-track\").getAttribute(\"style\").split(\"ht: \")[1];\n            const max = document.querySelector(\".sliderVertical span[role='slider']\").getAttribute(\"aria-valuemax\");\n            const min = document.querySelector(\".sliderVertical span[role='slider']\").getAttribute(\"aria-valuemin\");\n            const value = await calculeValue(porcent, min, max)\n            positionImageVertical = value;\n            user.positionImage = user.positionImage.split(\" \")[0] + \" \" + value + \" \" + user.positionImage.split(\" \")[2]; \n            document.querySelector(\"#avatarRegister\").style.marginTop = value + \"px\"; \n        }\n\n        async function sliderChangeSize(){\n            const image = document.querySelector(\"#avatarRegister\");\n            image.style.marginLeft = \"-24px\"\n            image.style.marginTop = \"0px\";\n            document.querySelector(\".sliderVertical input[type='hidden']\").value = 0;\n            document.querySelector(\".sliderHorizontal input[type='hidden']\").value = -24;\n\n            const value = document.querySelector(\".sliderSize input[type='hidden']\").value;\n            positionImageSize = value;\n            const numberToCalc = parseInt(positionImageSize) - 110;\n            document.querySelector(\".sliderHorizontal span[role='slider']\").setAttribute(\"aria-valuemax\", 24 + numberToCalc);\n            document.querySelector(\".sliderVertical span[role='slider']\").setAttribute(\"aria-valuemax\", 1 + numberToCalc);\n            document.querySelector(\".sliderVertical span[role='slider']\").setAttribute(\"aria-valuemin\", -1 - numberToCalc);\n\n            user.positionImage = user.positionImage.split(\" \")[0] + \" \" + user.positionImage.split(\" \")[1] + \" \" + value;\n            image.style.width = value + \"px\";\n        }\n\n        return <div>\n            <div id=\"divRegister\">\n                <h1 id=\"titleRegister\">Register</h1>\n                <form id=\"formRegister\" autoComplete=\"off\">\n                    <TextField className=\"inputRegister inputusername\" onChange={(event) => changeInput(event)} InputProps={{\n                        startAdornment: (\n                            <InputAdornment position=\"start\">\n                                <AccountCircle />\n                            </InputAdornment>\n                        )\n                    }} label=\"Username\"  type=\"text\" placeholder=\"Username\" name=\"username\" />\n                    <TextField className=\"inputRegister inputemail\" onChange={(event) => changeInput(event)} InputProps={{\n                        startAdornment: (\n                            <InputAdornment position=\"start\">\n                                <Email />\n                            </InputAdornment>\n                        )\n                    }} label=\"Email\"  type=\"email\" placeholder=\"Email\" name=\"email\" />\n                    <TextField className=\"inputRegister inputpassword\" onChange={(event) => changeInput(event)} InputProps={{\n                        startAdornment: (\n                            <InputAdornment position=\"start\">\n                                <Lock />\n                            </InputAdornment>\n                        )\n                    }} label=\"Password\"  type=\"password\" placeholder=\"Password\" name=\"password\" />\n                    <span id=\"messagePassword\">4 characters minimum</span>\n                    <TextField className=\"inputRegister inputdescription\" onChange={(event) => changeInput(event)} InputProps={{\n                        startAdornment: (\n                            <InputAdornment position=\"start\">\n                                <Description />\n                            </InputAdornment>\n                        )\n                    }} label=\"Description\" name=\"description\" multiline placeholder=\"Description (optional)\" />\n                    <label id=\"labelImage\">Avatar</label>\n                    <input className=\"inputRegister\" onChange={(event) => changeFile(event)} placeholder=\"avatar\"  type=\"file\" id=\"inputImage\" />\n                    <span id=\"messageImage\">El archivo no es una imagen</span>\n                    <Avatar id=\"avatarNone\" />\n                    <div id=\"contentAvatar\">\n                    <img id=\"avatarRegister\" src={AccountCircle} />\n                    </div>\n                    <div id=\"slidersDiv\" style={{width: \"100%\"}}>\n                        <Sliders />\n                    </div>\n                    <Button id=\"submitRegister\" onClick={submitUser} variant=\"contained\" >Submit</Button>\n                    <div id=\"messages\">\n                    <span className=\"messageError\" id=\"messageusername\">Username is required</span>\n                    <span className=\"messageError\" id=\"messageemail\">Email is required</span>\n                    <span className=\"messageError\" id=\"messagepassword\">In password 4 characters minimum</span>\n                    </div>\n                </form>  \n            </div>\n        </div>\n    }\n}","/home/thiagopuyelli/Escritorio/Programacion/imgShare/frontend/src/components/CreatePost.js",["97","98","99"],"import {Component} from \"react\";\nimport \"../assets/css/CreatePost.css\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport {global} from \"../assets/serverLink\";\nimport {Redirect} from \"react-router-dom\";\n\nexport class CreatePost extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            description: undefined,\n            image: undefined\n        }\n\n        this.changeFile = this.changeFile.bind(this)\n        this.changeDescription = this.changeDescription.bind(this)\n        this.submitPost = this.submitPost.bind(this)\n    }\n\n    changeFile(event){\n        const value = event.target.files[0];\n        const messageErrorImage = document.querySelector(\"#messageErrorImage\");\n        if(value){\n            if(value.type.split(\"/\")[0] == \"image\"){\n                messageErrorImage.style.display = \"none\";\n\n                this.setState(state => ({\n                    image: value\n                }));\n\n                const divImage = document.querySelector(\"#divImage\");\n                if(value.size <= 2000){\n                    divImage.style.width = \"auto\";\n                    divImage.style.height = \"auto\";\n                } else {\n                    divImage.style.width = \"450px\";\n                    divImage.style.height = \"240px\";\n                }\n    \n                const imagePost = document.querySelector(\"#imagePost\");\n                const urlImage = URL.createObjectURL(value);\n                imagePost.src = urlImage;\n            } else {\n                messageErrorImage.style.display = \"block\";\n            }\n        } else {\n            messageErrorImage.style.display = \"block\";\n        }\n    }    \n\n    changeDescription(event){\n        const value = event.target.value;\n        if(value != \"\"){\n            this.setState(state => ({\n                description: value\n            }))\n        } else {\n            this.setState(state => ({\n                description: undefined\n            }))\n        }\n    }\n\n    submitPost(){\n        window.event.preventDefault();\n        const { image, description } = this.state;\n        if(image){\n            var post\n            if(description){\n                post = {\n                    image,\n                    description,\n                }\n            } else {\n                post = {image};\n            }\n            var formData = new FormData();\n\n            for(let i in post) formData.append(i, post[i]);\n\n            fetch(global + \"posts\",{\n                method: \"POST\",\n                body: formData,\n                cors: \"no-cors\",\n                headers: {\n                    \"x-access-token\": sessionStorage.getItem(\"x-access-token\")\n                }\n            })\n            .then(response => response.json())\n            .then(response => {\n                if(response){\n                    Redirect(\"/\")\n                    window.location.reload();\n                }\n            })\n            .catch(err => console.log(err));\n        }\n\n    }\n\n    render(){\n\n        /*function submitPost(){\n            window.event.preventDefault();\n            console.log(this.returnState)\n            \n            if(image){\n                var post\n                if(description){\n                    post = {\n                        image,\n                        description,\n                    }\n                } else {\n                    post = {image};\n                }\n    \n                fetch(global + \"posts\",{\n                    method: \"POST\",\n                    body: post,\n                    headers: {\n                        \"Content-Type\": \"multipart/formdata\"\n                    }\n                })\n                .then(response => response.json())\n                .then(response => console.log(response))\n                .catch(err => console.log(err));\n            }\n\n        }*/\n\n        return (<div id=\"divFormulario\">\n            <h1>Create post</h1>\n            <form onSubmit={this.submitPost} id=\"formCreate\">\n                <TextField name=\"image\" onChange={(event) => this.changeFile(event)} className=\"inputCreate\" type=\"file\" />\n                <span id=\"messageErrorImage\">Image is not valid</span>\n                <div id=\"divImage\">\n                    <img id=\"imagePost\" />\n                </div>\n                <TextField name=\"description\" onChange={(event) => this.changeDescription(event)} className=\"inputCreate inputDescriptionCreate\" type=\"text\" label=\"description\" multiline placeholder=\"Description (optional)\" />\n                <Button variant=\"contained\" type=\"submit\" className=\"inputCreate\">Submit</Button>\n            </form>\n        </div>)\n    }\n}","/home/thiagopuyelli/Escritorio/Programacion/imgShare/frontend/src/components/methods/verifyAuth.js",[],"/home/thiagopuyelli/Escritorio/Programacion/imgShare/frontend/src/components/Home.js",[],"/home/thiagopuyelli/Escritorio/Programacion/imgShare/frontend/src/components/HomeAuth.js",["100"],"import {Component} from \"react\";\nimport {ListPosts} from \"./ListPosts\";\nimport {ListLikesPosts} from \"./ListLikesPosts\";\nimport {Profile} from \"./Profile\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\n\nexport class HomeAuth extends Component{\n\n    render(){\n        return (\n            <Router>\n                <Switch>\n                    <Route path=\"/profile\" children={<Profile />} />\n                    <Route path=\"/\">\n                        <ListPosts />\n                    </Route>\n                </Switch>\n            </Router>\n        )\n    }\n}","/home/thiagopuyelli/Escritorio/Programacion/imgShare/frontend/src/assets/serverLink.js",[],"/home/thiagopuyelli/Escritorio/Programacion/imgShare/frontend/src/components/Profile.js",["101","102","103","104","105","106"],"/home/thiagopuyelli/Escritorio/Programacion/imgShare/frontend/src/components/ListLikesPosts.js",["107"],"import {Component} from \"react\";\r\n\r\nexport class ListLikesPosts extends Component{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return <h1>Lista de post con los mas likes</h1>\r\n    }\r\n}","/home/thiagopuyelli/Escritorio/Programacion/imgShare/frontend/src/components/ListPosts.js",["108","109","110","111","112","113"],"import {Component} from \"react\";\nimport \"../assets/css/ListPosts.css\";\nimport {global} from \"../assets/serverLink\";\nimport { CollectionsOutlined, Favorite, FavoriteBorder } from \"@material-ui/icons\";\nimport { Redirect } from \"react-router-dom\";\n\nexport class ListPosts extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            posts: [],\n            like: false\n        };\n\n        this.getPosts = this.getPosts.bind(this);\n        this.Posts = this.Posts.bind(this)\n        this.verifyLike = this.verifyLike.bind(this);\n\n    }\n\n    componentDidMount(){\n        this.getPosts();\n        setTimeout(() => this.verifyLike(), 500)\n    }\n\n    getPosts(){\n        fetch(global + \"posts\", {\n            method: \"GET\",\n            headers: {\n                \"x-access-token\": sessionStorage.getItem(\"x-access-token\")\n            }\n        })\n        .then(response => response.json())\n        .then(result => {\n            this.setState(state => ({\n                posts: result\n            }))\n        })\n        .catch(err => console.log(err))\n    }\n    \n    verifyLike(){\n        for(let i in this.state.posts){\n            fetch(global + \"lik-verify/\" + this.state.posts[i].id, {\n                method: \"GET\",\n                headers: {\n                    \"x-access-token\": sessionStorage.getItem(\"x-access-token\")\n                }\n            })\n            .then(response => response.json())\n            .then(result => {\n                if(result.lik == true){\n                    this.setState(state => ({\n                        [\"like\" + this.state.posts[i].id]: true\n                    })) \n                }\n                \n            })\n            .catch(err => console.log(err));\n        }\n    }\n\n    redirectProfile(id){\n        sessionStorage.setItem(\"userID\", id);\n        Redirect(\"/profile\");\n    }\n    \n    Post(srcImage, likes, description, username, id){\n\n        if(this.state[\"like\" + id]){\n            document.querySelector(\"#post\" + id + \" .favoriteBorder\").style.display = \"none\";\n            document.querySelector(\"#post\" + id + \" .favorite\").style.display = \"block\";\n        }\n        \n        return (\n            <div className=\"post\" id={\"post\" + id} >\n                <img src={srcImage} className=\"postImage\" />\n                <div className=\"divUserLikes\">\n                    <a className=\"postUser\" href={\"/profile/\" + id}>{username}</a>\n                    <span className=\"postLikes\">\n                        <span className=\"postFavorite favoriteBorder\" onClick={(event) => {this.likPost(id)}} ><FavoriteBorder /></span>\n                        <span className=\"postFavorite favorite\" onClick={(event) => this.deleteLikPost(id)} ><Favorite /></span>\n                        <a><span className=\"postNumberLikes\">{likes}</span></a>\n                    </span>\n                </div>\n                {description != \"\" && \n                <p className=\"postDescription\">{description}</p>\n                }\n            </div>\n        )\n    }\n\n    Posts(){\n\n        var arrayPosts = [];\n        for(let i of this.state.posts) {\n            arrayPosts.push(this.Post(i.image, i.likes, i.description, i.user.username, i.id))\n            console.log(this.state[\"like\" + i.id])\n        }\n\n        return arrayPosts\n    }\n    \n    likPost(id){\n        var number = document.querySelector(\"#post\" + id +  \" .postNumberLikes\");\n        number.innerHTML = parseInt(number.innerHTML) + 1;\n        var inputLike = document.querySelector(\"#post\" + id + \" .favoriteBorder\");\n        var like = document.querySelector(\"#post\" + id + \" .favorite\");\n        inputLike.style.display = \"none\";\n        like.style.display = \"block\";\n        fetch(global + \"lik-verify/\" + id, {\n            method: \"GET\",\n            headers: {\n                \"x-access-token\": sessionStorage.getItem(\"x-access-token\")\n            }\n        })\n        .then(response => response.json())\n        .then(result => {\n            if(result.lik == false){\n                fetch(global + \"lik/\" + id, {\n                    method: \"GET\",\n                    headers: {\n                        \"x-access-token\": sessionStorage.getItem(\"x-access-token\")\n                    }\n                })\n                .then(response => response.json())\n                .then(res => {\n                })\n                .catch(err =>{\n                    var number = document.querySelector(\"#post\" + id +  \" .postNumberLikes\");\n                    number.innerHTML = parseInt(number.innerHTML) - 1;\n                    var inputLike = document.querySelector(\"#post\" + id + \" .favorite\");\n                    var like = document.querySelector(\"#post\" + id + \" .favoriteBorder\");\n                    inputLike.style.display = \"none\";\n                    like.style.display = \"block\";\n                })          \n            } \n        })\n        .catch(err => console.log(err))\n    }\n\n    deleteLikPost(id){\n        var number = document.querySelector(\"#post\" + id +  \" .postNumberLikes\");\n        number.innerHTML = parseInt(number.innerHTML) - 1;\n        var inputLike = document.querySelector(\"#post\" + id + \" .favorite\");\n        var like = document.querySelector(\"#post\" + id + \" .favoriteBorder\");\n        inputLike.style.display = \"none\";\n        like.style.display = \"block\";\n        fetch(global + \"lik/\" + id, {\n            method: \"DELETE\",\n            headers: {\n                \"x-access-token\": sessionStorage.getItem(\"x-access-token\")\n            }\n        })\n        .then(response => response.json())\n        .then(result => {\n\n        })\n        .catch(err => {\n            var number = document.querySelector(\"#post\" + id +  \" .postNumberLikes\");\n            number.innerHTML = parseInt(number.innerHTML) + 1;\n            var inputLike = document.querySelector(\"#post\" + id + \" .favoriteBorder\");\n            var like = document.querySelector(\"#post\" + id + \" .favorite\");\n            inputLike.style.display = \"none\";\n            like.style.display = \"block\";\n        });\n    }\n    \n    render(){\n\n        return (\n            <div id=\"contentList\">\n                <this.Posts />\n            </div>\n        )\n    }\n}",{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":45,"column":13,"nodeType":"120","messageId":"121","endLine":45,"endColumn":15},{"ruleId":"118","severity":1,"message":"122","line":33,"column":27,"nodeType":"120","messageId":"121","endLine":33,"endColumn":29},{"ruleId":"118","severity":1,"message":"122","line":33,"column":50,"nodeType":"120","messageId":"121","endLine":33,"endColumn":52},{"ruleId":"123","severity":1,"message":"124","line":80,"column":17,"nodeType":"125","endLine":80,"endColumn":100},{"ruleId":"118","severity":1,"message":"119","line":110,"column":36,"nodeType":"120","messageId":"121","endLine":110,"endColumn":38},{"ruleId":"123","severity":1,"message":"124","line":135,"column":21,"nodeType":"125","endLine":135,"endColumn":83},{"ruleId":"118","severity":1,"message":"122","line":60,"column":22,"nodeType":"120","messageId":"121","endLine":60,"endColumn":24},{"ruleId":"118","severity":1,"message":"122","line":60,"column":38,"nodeType":"120","messageId":"121","endLine":60,"endColumn":40},{"ruleId":"118","severity":1,"message":"122","line":60,"column":62,"nodeType":"120","messageId":"121","endLine":60,"endColumn":64},{"ruleId":"118","severity":1,"message":"119","line":61,"column":32,"nodeType":"120","messageId":"121","endLine":61,"endColumn":34},{"ruleId":"118","severity":1,"message":"119","line":61,"column":56,"nodeType":"120","messageId":"121","endLine":61,"endColumn":58},{"ruleId":"118","severity":1,"message":"122","line":72,"column":31,"nodeType":"120","messageId":"121","endLine":72,"endColumn":33},{"ruleId":"118","severity":1,"message":"122","line":75,"column":30,"nodeType":"120","messageId":"121","endLine":75,"endColumn":32},{"ruleId":"118","severity":1,"message":"122","line":76,"column":40,"nodeType":"120","messageId":"121","endLine":76,"endColumn":42},{"ruleId":"118","severity":1,"message":"122","line":88,"column":30,"nodeType":"120","messageId":"121","endLine":88,"endColumn":32},{"ruleId":"118","severity":1,"message":"122","line":88,"column":46,"nodeType":"120","messageId":"121","endLine":88,"endColumn":48},{"ruleId":"118","severity":1,"message":"119","line":89,"column":34,"nodeType":"120","messageId":"121","endLine":89,"endColumn":36},{"ruleId":"118","severity":1,"message":"122","line":89,"column":71,"nodeType":"120","messageId":"121","endLine":89,"endColumn":73},{"ruleId":"118","severity":1,"message":"122","line":126,"column":21,"nodeType":"120","messageId":"121","endLine":126,"endColumn":23},{"ruleId":"118","severity":1,"message":"122","line":126,"column":46,"nodeType":"120","messageId":"121","endLine":126,"endColumn":48},{"ruleId":"118","severity":1,"message":"119","line":126,"column":69,"nodeType":"120","messageId":"121","endLine":126,"endColumn":71},{"ruleId":"118","severity":1,"message":"119","line":129,"column":28,"nodeType":"120","messageId":"121","endLine":129,"endColumn":30},{"ruleId":"118","severity":1,"message":"122","line":133,"column":28,"nodeType":"120","messageId":"121","endLine":133,"endColumn":30},{"ruleId":"118","severity":1,"message":"119","line":137,"column":25,"nodeType":"120","messageId":"121","endLine":137,"endColumn":27},{"ruleId":"118","severity":1,"message":"119","line":138,"column":28,"nodeType":"120","messageId":"121","endLine":138,"endColumn":30},{"ruleId":"118","severity":1,"message":"119","line":145,"column":45,"nodeType":"120","messageId":"121","endLine":145,"endColumn":47},{"ruleId":"126","severity":1,"message":"127","line":187,"column":13,"nodeType":"128","messageId":"129","endLine":187,"endColumn":31},{"ruleId":"126","severity":1,"message":"130","line":197,"column":13,"nodeType":"128","messageId":"129","endLine":197,"endColumn":34},{"ruleId":"123","severity":1,"message":"124","line":258,"column":21,"nodeType":"125","endLine":258,"endColumn":68},{"ruleId":"118","severity":1,"message":"119","line":25,"column":41,"nodeType":"120","messageId":"121","endLine":25,"endColumn":43},{"ruleId":"118","severity":1,"message":"122","line":54,"column":18,"nodeType":"120","messageId":"121","endLine":54,"endColumn":20},{"ruleId":"123","severity":1,"message":"124","line":139,"column":21,"nodeType":"125","endLine":139,"endColumn":43},{"ruleId":"126","severity":1,"message":"131","line":3,"column":9,"nodeType":"128","messageId":"129","endLine":3,"endColumn":23},{"ruleId":"123","severity":1,"message":"124","line":101,"column":16,"nodeType":"125","endLine":101,"endColumn":109},{"ruleId":"118","severity":1,"message":"119","line":124,"column":31,"nodeType":"120","messageId":"121","endLine":124,"endColumn":33},{"ruleId":"123","severity":1,"message":"124","line":189,"column":21,"nodeType":"125","endLine":189,"endColumn":53},{"ruleId":"132","severity":1,"message":"133","line":195,"column":36,"nodeType":"134","messageId":"135","endLine":195,"endColumn":38},{"ruleId":"118","severity":1,"message":"122","line":195,"column":53,"nodeType":"120","messageId":"121","endLine":195,"endColumn":55},{"ruleId":"132","severity":1,"message":"133","line":195,"column":59,"nodeType":"134","messageId":"135","endLine":195,"endColumn":61},{"ruleId":"136","severity":1,"message":"137","line":5,"column":5,"nodeType":"138","messageId":"139","endLine":7,"endColumn":6},{"ruleId":"126","severity":1,"message":"140","line":4,"column":10,"nodeType":"128","messageId":"129","endLine":4,"endColumn":29},{"ruleId":"118","severity":1,"message":"119","line":53,"column":31,"nodeType":"120","messageId":"121","endLine":53,"endColumn":33},{"ruleId":"123","severity":1,"message":"124","line":78,"column":17,"nodeType":"125","endLine":78,"endColumn":61},{"ruleId":"141","severity":1,"message":"142","line":84,"column":25,"nodeType":"125","endLine":84,"endColumn":28},{"ruleId":"118","severity":1,"message":"122","line":87,"column":30,"nodeType":"120","messageId":"121","endLine":87,"endColumn":32},{"ruleId":"118","severity":1,"message":"119","line":120,"column":27,"nodeType":"120","messageId":"121","endLine":120,"endColumn":29},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'positionImageWidth' is assigned a value but never used.","Identifier","unusedVar","'positionImageVertical' is assigned a value but never used.","'ListLikesPosts' is defined but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'CollectionsOutlined' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]